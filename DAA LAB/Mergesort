import java.io.*;
import java.util.*;
import java.lang.*;
public class mergesort
{
	public static void merge(int []arr,int l,int m,int r)
	{
		int n1 = m-l+1;
		int n2 = r-m;
		int L[] = new int[n1*2];
		int R[] = new int[n2*2];
		for(int i=0;i<n1;i++)
			L[i] = arr[l+i];
		for(int j=0;j<n2;j++)
			R[j] = arr[m+1+j];
		int i=0,j=0,k=l;
		while(i<n1 && j<n2)
		{
			if(L[i]<=R[i])
				arr[k++]=L[i++];
			else
				arr[k++]=R[j++];
		}
		while(i<n1)
			arr[k++]=L[i++];
		while(j<n2)
			arr[k++]=R[j++];
	}
	static void sort(int []arr,int l,int r)
	{
		if(l<r)
		{
			int m = l+(r-l)/2;
			sort(arr,l,m);
			sort(arr,m+1,r);
			merge(arr,l,m,r);
		}
	}
	public static void main(String []args)
	{
		Scanner sc = new Scanner(System.in);
		Random ran = new Random();
		System.out.print("Enter the array size = ");
		int n = sc.nextInt();
		int []arr = new int[n];;
		System.out.print("1.Best Case  2.Average Case  3.Worst Case\nEnter the Choice = ");
		int ch = sc.nextInt();
		switch(ch)
		{
			case 1 : System.out.println("BEST CASE");
					 for(int i=0;i<n;i++)
					 	arr[i]=i;
					 break;
			case 2 : System.out.println("AVERAGE CASE");
					 for(int i=0;i<n;i++)
					 	arr[i]=ran.nextInt(n);
					 break;
			case 3 : System.out.println("WORST CASE");
					 for(int i=0;i<n;i++)
					 	arr[i]=n-i;
					 break;
		}
		
		long start,stop;
		start = System.nanoTime();
		sort(arr,0,arr.length-1);
		stop = System.nanoTime();
		System.out.println("Time Taken to sort "+arr.length+" elements = "+(stop-start));
	}
}
